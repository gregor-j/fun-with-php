@startuml

title composer install vs. update

start

note right
    Read the documentation on
    https://getcomposer.org/doc/01-basic-usage.md
end note

:update list of packages and versions from packagist;

if (command) then (update)

  :update list of packages and versions from other repositories;

  :get list of packages and versions from composer.json;

  while (Packages left to process from composer.json?) is (yes)

    if (Is composer.lock present?) then (yes)

      if(Is package newer than the one in composer.lock?) then (yes)

        :update package version/commit-id in composer.lock;

      else (no)
      endif;

    else (no)

      :set package and version/commit-id in composer.lock;

    endif;

  endwhile (no);

else (install)

  if (Is composer.lock present?) then (no)

    :update list of packages and versions from other repositories;

    :get list of packages and versions from composer.json;

    while (Packages left to process from composer.json?) is (yes)

      :set package and version/commit-id in composer.lock;

    endwhile (no);

  else (yes)
  endif;

endif;

:install packages according to composer.lock;

note right
  Committing this file to VC is important because it will cause anyone who sets
  up the project to use the exact same versions of the dependencies that you are
  using. Your CI server, production machines, other developers in your team,
  everything and everyone runs on the same dependencies, which mitigates the
  potential for bugs affecting only some parts of the deployments. Even if you
  develop alone, in six months when reinstalling the project you can feel
  confident the dependencies installed are still working even if your
  dependencies released many new versions since then.
end note

stop

@enduml